{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emelisa.p.rafols\\\\Desktop\\\\Node-Assessment\\\\Client\\\\src\\\\components\\\\show.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass showContact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3400/contacts').then(res => {\n      this.setState({\n        fullname: contacts.fullname,\n        email: contacts.email,\n        location: contacts.location\n      });\n    }).catch(err => {\n      console.log('Error from Contact List');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-11 m-auto \",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/add\",\n          className: \"btn btn-outline-primary float-left\",\n          id: \"showContactList\",\n          children: \"Add Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Contact List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: 400\n            },\n            children: /*#__PURE__*/_jsxDEV(DataGrid, {\n              style: {\n                color: 'black'\n              },\n              rows: this.state.contacts,\n              columns: columns,\n              pageSize: 5,\n              rowsPerPageOptions: [5],\n              getRowId: row => row._id,\n              disableSelectionOnClick: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n} //Creating Column\n\n\nconst columns = [{\n  field: '_id',\n  headerName: 'ID',\n  width: 150\n}, {\n  field: 'fullname',\n  headerName: 'Full Name',\n  width: 150\n}, {\n  field: 'email',\n  headerName: 'Email Address',\n  width: 200\n}, {\n  field: 'number',\n  headerName: 'Contact Number',\n  width: 200\n}, {\n  field: 'location',\n  headerName: 'Location',\n  width: 200\n}, {\n  field: 'date',\n  headerName: 'Registered Date',\n  width: 200\n}, {\n  field: '',\n  headerName: 'Action',\n  width: 200,\n  renderCell: params => {\n    const onDelete = async () => {\n      axios.delete('http://localhost:3400/contacts/' + params.row._id).then(() => {\n        console.log(params.row._id);\n        Swal.fire('Successfully Deleted!');\n        window.location.reload();\n      }).catch(err => {\n        console.log(\"Error in deleting contact!\" + err);\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: `contact/view/${params.row._id}`,\n        class: \"btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-eye\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 67\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `contact/update/${params.row._id}`,\n        class: \"btn\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), \"\\xA0 \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `contact/delete/${params.row._id}`,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-trash \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n}];\nexport default showContact;","map":{"version":3,"sources":["C:/Users/emelisa.p.rafols/Desktop/Node-Assessment/Client/src/components/show.js"],"names":["React","Component","axios","Link","Swal","DataGrid","showContact","constructor","props","state","contacts","componentDidMount","get","then","res","setState","fullname","email","location","catch","err","console","log","render","height","color","columns","row","_id","field","headerName","width","renderCell","params","onDelete","delete","fire","window","reload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\n\r\nclass showContact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contacts: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get('http://localhost:3400/contacts')\r\n      .then(res => {\r\n        this.setState({\r\n          fullname:contacts.fullname,\r\n          email:contacts.email,\r\n          location:contacts.location,\r\n          \r\n\r\n\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log('Error from Contact List');\r\n      })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"container\" >\r\n      <div className=\"col-md-11 m-auto \" >\r\n      <Link to=\"/add\" className=\"btn btn-outline-primary float-left\" id=\"showContactList\">\r\n       Add Contact\r\n      </Link>\r\n    </div>\r\n        <div  className=\"container\">\r\n          <div className=\"\">\r\n            <h1 >Contact List</h1><br />\r\n\r\n            <div style={{ height: 400 }}>\r\n              <DataGrid style={{ color: 'black' }}\r\n                rows={this.state.contacts}\r\n                columns={columns}\r\n                pageSize={5}\r\n                rowsPerPageOptions={[5]}\r\n                getRowId={(row) => row._id}\r\n                disableSelectionOnClick\r\n              />\r\n            </div>\r\n            <br />\r\n            <hr /><br />\r\n          </div></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Creating Column\r\nconst columns = [\r\n  { field: '_id', headerName: 'ID', width: 150 },\r\n  {\r\n    field: 'fullname',\r\n    headerName: 'Full Name',\r\n    width: 150,\r\n\r\n  },\r\n  {\r\n    field: 'email',\r\n    headerName: 'Email Address',\r\n    width: 200,\r\n\r\n  },\r\n  {\r\n    field: 'number',\r\n    headerName: 'Contact Number',\r\n    width: 200,\r\n\r\n  },\r\n  {\r\n    field: 'location',\r\n    headerName: 'Location',\r\n    width: 200,\r\n\r\n  },\r\n  {\r\n    field: 'date',\r\n    headerName: 'Registered Date',\r\n    width: 200,\r\n  },\r\n  {\r\n    field: '',\r\n    headerName: 'Action',\r\n    width: 200,\r\n\r\n\r\n    renderCell: (params) => {\r\n\r\n      const onDelete = async () => {\r\n        \r\n        axios\r\n          .delete('http://localhost:3400/contacts/' + params.row._id)\r\n          .then(() => {\r\n            console.log(params.row._id);\r\n            Swal.fire(\r\n              'Successfully Deleted!',  \r\n            );\r\n            window.location.reload();\r\n          })\r\n          .catch(err => {\r\n            console.log(\"Error in deleting contact!\" + err);\r\n          })\r\n      };\r\n      return (\r\n        <>\r\n          <a href={`contact/view/${params.row._id}`} class=\"btn\" ><i class=\"fas fa-eye\"></i> </a>\r\n          <a href={`contact/update/${params.row._id}`} class=\"btn\"><i class=\"fa fa-edit\" ></i></a>&nbsp; &nbsp;&nbsp;\r\n          <a href={`contact/delete/${params.row._id}`}><i class=\"fa fa-trash \"></i></a>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n];\r\n\r\n\r\nexport default showContact;"]},"metadata":{},"sourceType":"module"}