{"ast":null,"code":"// import React, { Component } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Paper from '@material-ui/core/Paper';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TablePagination from '@material-ui/core/TablePagination';\n// import TableRow from '@material-ui/core/TableRow';\n// import { FaEye, FaPencilAlt, FaTimes } from 'react-icons/fa';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios';\nclass Pagination extends Component {//     constructor(props) {\n  //         super(props);\n  //         this.state = {\n  //             contacts: []\n  //         };\n  //     }\n  //     componentDidMount() {\n  //         axios\n  //           .get('http://localhost:3400/contact')\n  //           .then(res => {\n  //             this.setState({\n  //               contacts: res.data\n  //             })\n  //           })\n  //           .catch(err => {\n  //             console.log('Error from Contact List');\n  //           })\n  //       }\n  //     render() {\n  //     const classes = useStyles();\n  //     const[page, setPage] = React.useState(0);\n  //     const[rowsPerPage, setRowsPerPage] = React.useState(5);\n  //     const handleChangePage = (event, newPage) => {\n  //         setPage(newPage);\n  //     };\n  //     const handleChangeRowsPerPage = (event) => {\n  //         setRowsPerPage(+event.target.value);\n  //         setPage(0);\n  //     };\n  //         return (\n  //             <Paper className={classes.root}>\n  //                 <TableContainer className={classes.container}>\n  //                     <Table stickyHeader aria-label=\"sticky table\">\n  //                         <TableHead>\n  //                             <TableRow>\n  //                                 <TableCell>Fullname</TableCell>\n  //                                 <TableCell>Email Address</TableCell>\n  //                                 <TableCell>Contact Number</TableCell>\n  //                                 <TableCell>Location</TableCell>\n  //                                 <TableCell>Registered Data</TableCell>\n  //                                 <TableCell>Action</TableCell>\n  //                             </TableRow>\n  //                         </TableHead>\n  //                         <TableBody>\n  //                             {contacts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((contact) => <TableRow className=\"classes.tr\" hover key={contact.id}>\n  //                                 <TableCell>{contact.fullname}</TableCell>\n  //                                 <TableCell>{contact.email}</TableCell>\n  //                                 <TableCell>{contact.number}</TableCell>\n  //                                 <TableCell>{contact.location}</TableCell>\n  //                                 <TableCell>{contact.date}</TableCell>\n  //                                 {/*<TableCell>\n  //                                     <Link exact to={`/ShowContacts/${contact.id}`}><FaEye onClick={(contact.id)} className=\"editIcon\" /></Link>&nbsp;\n  //                                     <FaTimes onClick={() => onDelete(contact.id)} className=\"delIcon\" /> &nbsp;\n  //                                     <Link exact to={`/EditContacts/${contact.id}`}><FaPencilAlt onClick={(contact.id)} className=\"editIcon\" /></Link>\n  //                                 </TableCell>*/}\n  //                             </TableRow>\n  //                             )}\n  //                         </TableBody>\n  //                     </Table>\n  //                 </TableContainer>\n  //                 <TablePagination\n  //                     rowsPerPageOptions={[5]}\n  //                     component=\"div\"\n  //                     count={contacts.length}\n  //                     rowsPerPage={rowsPerPage}\n  //                     page={page}\n  //                     onPageChange={handleChangePage}\n  //                     onRowsPerPageChange={handleChangeRowsPerPage} />\n  //             </Paper>\n  //         );\n  //     }\n}\n\nexport default Pagination;","map":{"version":3,"sources":["C:/Users/emelisa.p.rafols/Desktop/Node-Assessment/Client/src/components/Home.js"],"names":["Pagination","Component"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,UAAN,SAAyBC,SAAzB,CAAmC,CAEnC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/EmC;;AAkFlC,eAAeD,UAAf","sourcesContent":["// import React, { Component } from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\n// import TableRow from '@material-ui/core/TableRow';\r\n// import { FaEye, FaPencilAlt, FaTimes } from 'react-icons/fa';\r\n// import { Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\nclass Pagination extends Component {\r\n    \r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             contacts: []\r\n//         };\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         axios\r\n//           .get('http://localhost:3400/contact')\r\n//           .then(res => {\r\n//             this.setState({\r\n//               contacts: res.data\r\n//             })\r\n//           })\r\n//           .catch(err => {\r\n//             console.log('Error from Contact List');\r\n//           })\r\n//       }\r\n    \r\n\r\n\r\n//     render() {\r\n        \r\n//     const classes = useStyles();\r\n//     const[page, setPage] = React.useState(0);\r\n//     const[rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n//     const handleChangePage = (event, newPage) => {\r\n//         setPage(newPage);\r\n//     };\r\n\r\n//     const handleChangeRowsPerPage = (event) => {\r\n//         setRowsPerPage(+event.target.value);\r\n//         setPage(0);\r\n//     };\r\n//         return (\r\n//             <Paper className={classes.root}>\r\n//                 <TableContainer className={classes.container}>\r\n//                     <Table stickyHeader aria-label=\"sticky table\">\r\n//                         <TableHead>\r\n//                             <TableRow>\r\n//                                 <TableCell>Fullname</TableCell>\r\n//                                 <TableCell>Email Address</TableCell>\r\n//                                 <TableCell>Contact Number</TableCell>\r\n//                                 <TableCell>Location</TableCell>\r\n//                                 <TableCell>Registered Data</TableCell>\r\n//                                 <TableCell>Action</TableCell>\r\n//                             </TableRow>\r\n//                         </TableHead>\r\n//                         <TableBody>\r\n//                             {contacts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((contact) => <TableRow className=\"classes.tr\" hover key={contact.id}>\r\n//                                 <TableCell>{contact.fullname}</TableCell>\r\n//                                 <TableCell>{contact.email}</TableCell>\r\n//                                 <TableCell>{contact.number}</TableCell>\r\n//                                 <TableCell>{contact.location}</TableCell>\r\n//                                 <TableCell>{contact.date}</TableCell>\r\n//                                 {/*<TableCell>\r\n//                                     <Link exact to={`/ShowContacts/${contact.id}`}><FaEye onClick={(contact.id)} className=\"editIcon\" /></Link>&nbsp;\r\n//                                     <FaTimes onClick={() => onDelete(contact.id)} className=\"delIcon\" /> &nbsp;\r\n//                                     <Link exact to={`/EditContacts/${contact.id}`}><FaPencilAlt onClick={(contact.id)} className=\"editIcon\" /></Link>\r\n//                                 </TableCell>*/}\r\n//                             </TableRow>\r\n//                             )}\r\n//                         </TableBody>\r\n//                     </Table>\r\n//                 </TableContainer>\r\n//                 <TablePagination\r\n//                     rowsPerPageOptions={[5]}\r\n//                     component=\"div\"\r\n//                     count={contacts.length}\r\n//                     rowsPerPage={rowsPerPage}\r\n//                     page={page}\r\n//                     onPageChange={handleChangePage}\r\n//                     onRowsPerPageChange={handleChangeRowsPerPage} />\r\n//             </Paper>\r\n//         );\r\n//     }\r\n }\r\n\r\n export default Pagination;"]},"metadata":{},"sourceType":"module"}